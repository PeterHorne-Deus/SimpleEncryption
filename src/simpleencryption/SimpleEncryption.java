package simpleencryption;

/*
 * Peter Horne-Deus
 * This program proforms a simple single character shift encryption and decription 
 * SimpleEncryption.java
 * Feburary 24, 2020
 */


/**
 *
 * @author pehor9164
 */
public class SimpleEncryption extends javax.swing.JFrame {

    /**
     * Creates new form SimpleEncryption
     */
    public SimpleEncryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundJPane = new javax.swing.JPanel();
        input2Lbl = new javax.swing.JLabel();
        input1Lbl = new javax.swing.JLabel();
        encryptBtn = new javax.swing.JButton();
        unencryptTxtFeild = new javax.swing.JTextField();
        encryptLbl = new javax.swing.JLabel();
        unencryptLbl = new javax.swing.JLabel();
        encryptTxtfeild = new javax.swing.JTextField();
        unencryptBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backgroundJPane.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        input2Lbl.setText("Enter a sentence or word that you would like to unencrypt:");
        backgroundJPane.add(input2Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));

        input1Lbl.setText("Enter a sentence or word that you would like the encryption of:");
        backgroundJPane.add(input1Lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        encryptBtn.setText("Encrypt");
        encryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptBtnActionPerformed(evt);
            }
        });
        backgroundJPane.add(encryptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, -1, -1));
        backgroundJPane.add(unencryptTxtFeild, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 300, -1));

        encryptLbl.setForeground(new java.awt.Color(204, 0, 0));
        backgroundJPane.add(encryptLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 300, 20));

        unencryptLbl.setForeground(new java.awt.Color(204, 0, 0));
        backgroundJPane.add(unencryptLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 130, 20));
        backgroundJPane.add(encryptTxtfeild, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 300, -1));

        unencryptBtn.setText("Unencrypt");
        unencryptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unencryptBtnActionPerformed(evt);
            }
        });
        backgroundJPane.add(unencryptBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 270, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundJPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundJPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void encryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptBtnActionPerformed
        //Variables
        String input = encryptTxtfeild.getText();
        char letterIn,letterOut;
        int characterValue;
        String output = "";
        int n =0;
        
        //Setting input string to lower case to ensure that ascii values will be correct
        input = input.toLowerCase();
        
        //Loop to shift all the letters 
        for(int i = 0; i < input.length(); i++){
            //Setting a character to the input string character
            letterIn = input.charAt(n);
            //Shifting the character one space through interger casting
            characterValue = (int)letterIn + 1;
            
            //Checking if the character is a space and if so making sure it remains a space
            if(characterValue == 33){
                characterValue = 32;
                letterOut = (char)characterValue;
            }
            //Checking if the character is a 'z' and the setting it to an 'a'
            else if(characterValue == 123){
                characterValue = 97;
                letterOut = (char)characterValue;    
            }
            //Setting the output chracters for any other characters 
            else{
                letterOut = (char)characterValue;
            }
            //Setting the output string 
            output = output + letterOut;
            n++;
        }
        //Outputing the message
        encryptLbl.setText("Output: " + output);
        
    }//GEN-LAST:event_encryptBtnActionPerformed

    private void unencryptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unencryptBtnActionPerformed
        //Variables
        String input = unencryptTxtFeild.getText();
        char letterIn,letterOut;
        int characterValue;
        String output = "";
        int n =0;
        
        //Setting the input to lower case to ensure proper ascii values
        input = input.toLowerCase();
        
        //This is the loop that shifts the characters back by one
        for(int i = 0; i < input.length(); i++){
            //Getting the character of the input at a given location
            letterIn = input.charAt(n);
            //Casting the character value to an interger to decrease the value by one
            characterValue = (int)letterIn - 1;
            
            //Checking for spaces so that the spaces remain spaces
            if(characterValue == 31){
                characterValue = 32;
                letterOut = (char)characterValue;
            }
            //Checking if the letter is an 'a' and switching it to a 'z'
            else if(characterValue == 96){
                characterValue = 122;
                letterOut = (char)characterValue;    
            }
            //Setting to correct output for all other characters
            else{
                letterOut = (char)characterValue;
            }
            //Setting the output string based on the output characters
            output = output + letterOut;
            n++;
        }
        //Outputing the final message
        unencryptLbl.setText("Output: " + output);
    }//GEN-LAST:event_unencryptBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleEncryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleEncryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel backgroundJPane;
    private javax.swing.JButton encryptBtn;
    private javax.swing.JLabel encryptLbl;
    private javax.swing.JTextField encryptTxtfeild;
    private javax.swing.JLabel input1Lbl;
    private javax.swing.JLabel input2Lbl;
    private javax.swing.JButton unencryptBtn;
    private javax.swing.JLabel unencryptLbl;
    private javax.swing.JTextField unencryptTxtFeild;
    // End of variables declaration//GEN-END:variables
}
